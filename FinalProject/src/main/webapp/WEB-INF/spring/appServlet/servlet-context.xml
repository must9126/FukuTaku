<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven> <!-- 어노테이션관련 설정을 하기 위한 공간 생성  여기껀 포맷-->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
				
			</bean>
		</mvc:message-converters>
	
	</mvc:annotation-driven>

	<!-- view에 필요한 resolver -->
	<bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 		  <!-- setting maximum upload size -->
        <property name="maxUploadSize" value="314572800" />       
    </bean>

	<!--  Tiles가 일어나서 확인하는 작업 -->
    <!--  <bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
       <property name="definitions"  value="/WEB-INF/tiles.xml"/> -->
       <!-- 다음 설정을 안해주면 Preparer에서 autowired가 안되서 NullPointer 예외가 발생함. -->
       <!-- <property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SimpleSpringPreparerFactory" />
    </bean> -->
    
     <!-- Tiles를 깨우는 작업 -->
     <!-- <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
       <property name="viewClass"  value="org.springframework.web.servlet.view.tiles3.TilesView"/>
       <property name="order"  value="1"/>
    </bean> -->




	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order"  value="2"/>
	</bean>
	
	<context:component-scan base-package="com.fukutaku.web.controller" />
	
	
	
</beans>
